import streamlit as st
import pandas as pd
import yfinance as yf
import plotly.express as px

# Configura칞칚o do Streamlit
st.set_page_config(page_title="An치lise do Pre칞o do Petr칩leo", layout="wide")

# 游댳 Fun칞칚o para carregar os dados do petr칩leo Brent
@st.cache_data
def get_data():
    brent_data = yf.Ticker("BZ=F")
    df = pd.DataFrame(brent_data.history(period="max"))

    # 游댳 Ajustando o 칤ndice para n칚o mostrar horas
    df['Date'] = pd.to_datetime(df.index, format='%Y-%m-%d').date
    df.index = df['Date']

    # 游댳 Selecionando as colunas relevantes
    df = df[['Close']].rename(columns={'Close': 'Pre칞o'})

    return df

df = get_data()

if df is None or df.empty:
    st.error("Erro ao carregar os dados do petr칩leo Brent. Verifique a API do Yahoo Finance.")
    st.stop()  # Para a execu칞칚o se os dados n칚o carregarem corretamente

# 游댳 Barra lateral para navega칞칚o
st.sidebar.title("Menu de Navega칞칚o")
pagina = st.sidebar.radio("Escolha a P치gina", ["游늵 An치lise Explorat칩ria", "游닆 Dados Hist칩ricos", "游늳 Modelo Preditivo"])

# 游댳 游늵 P치gina 1: An치lise Explorat칩ria
if pagina == "游늵 An치lise Explorat칩ria":
    st.title("An치lise Explorat칩ria do Pre칞o do Petr칩leo")

    # 游댳 Filtro de per칤odo
    data_min = df.index.min()
    data_max = df.index.max()

    periodo = st.sidebar.date_input("Selecione o per칤odo", [data_min, data_max], min_value=data_min, max_value=data_max)

    # 游댳 Filtrando os dados corretamente
    df_filtrado = df.loc[periodo[0]:periodo[1]]

    # 游댳 Criando DataFrame com estat칤sticas anuais
    df_filtrado['Ano'] = pd.to_datetime(df_filtrado.index).year
    estatisticas_anual = df_filtrado.groupby('Ano')['Pre칞o'].agg(['max', 'min', 'mean']).reset_index()

    # 游댳 Criando a caixa de sele칞칚o para o usu치rio escolher quais m칠tricas visualizar
    opcoes = {
        "Pre칞o M치ximo": "max",
        "Pre칞o M칤nimo": "min",
        "Pre칞o M칠dio": "mean"
    }
    
    selecao = st.sidebar.multiselect(
        "Escolha quais m칠tricas deseja visualizar",
        options=list(opcoes.keys()), 
        default=["Pre칞o M칠dio", "Pre칞o M치ximo", "Pre칞o M칤nimo"]  # Exibe todas as m칠tricas por padr칚o
    )

    # 游댳 Filtrando apenas as colunas selecionadas
    estatisticas_anual = estatisticas_anual[['Ano'] + [opcoes[opcao] for opcao in selecao]]

    # 游댳 Criando gr치fico de barras interativo com Plotly
    fig = px.bar(
        estatisticas_anual.melt(id_vars=['Ano'], var_name="M칠trica", value_name="Pre칞o"),
        x="Ano",
        y="Pre칞o",
        color="M칠trica",
        barmode="group",
        labels={"Pre칞o": "Pre칞o do Petr칩leo (USD)", "Ano": "Ano", "M칠trica": "Tipo de Pre칞o"},
        title="Evolu칞칚o do Pre칞o do Petr칩leo por Ano"
    )

    # 游댳 Exibindo o gr치fico interativo no Streamlit
    st.plotly_chart(fig, use_container_width=True)

    # 游댳 Gr치fico de linha: pre칞o real ao longo do tempo
    st.line_chart(df_filtrado['Pre칞o'])

# 游댳 游닆 P치gina 2: Dados Hist칩ricos
elif pagina == "游닆 Dados Hist칩ricos":
    st.title("Dados Hist칩ricos do Pre칞o do Petr칩leo")

    # 游댳 Cria칞칚o de um gr치fico destacando per칤odos de crise
    crises = {
        "Crise Financeira de 2008": "2008-07-01",
        "Queda do Petr칩leo em 2014": "2014-06-01",
        "Pandemia COVID-19 (2020)": "2020-03-01"
    }

    fig = px.line(
        df, x=df.index, y="Pre칞o", title="Varia칞칚o Hist칩rica do Pre칞o do Petr칩leo",
        labels={"Pre칞o": "Pre칞o do Petr칩leo (USD)", "index": "Ano"}
    )

    # 游댳 Adicionando as linhas verticais para crises
    for crise, data in crises.items():
        fig.add_vline(x=pd.to_datetime(data), line_dash="dash", line_color="red", annotation_text=crise)

    st.plotly_chart(fig, use_container_width=True)

# 游댳 游늳 P치gina 3: Modelo Preditivo
elif pagina == "游늳 Modelo Preditivo":
    st.title("Modelo de Previs칚o do Pre칞o do Petr칩leo")

    st.write("Aqui ser치 inserida a previs칚o baseada no melhor modelo.")

# 游댳 Tratamento para evitar erro caso nenhuma op칞칚o seja escolhida
else:
    st.write("Selecione uma p치gina no menu lateral para visualizar os dados.")
